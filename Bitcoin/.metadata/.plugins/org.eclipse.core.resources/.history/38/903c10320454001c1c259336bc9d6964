package com.trade.coin.model;
import java.util.Map;

import org.springframework.stereotype.Component;
import org.springframework.web.socket.*;
import com.fasterxml.jackson.databind.ObjectMapper; 

@Component
public class BitWebSocket implements WebSocketHandler {
	
    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public void afterConnectionEstablished(WebSocketSession session) throws Exception {
        System.out.println("afterConnectionEstablished, session:{}, session:{}" + session.getId() + session.getUri());
    }

    @Override
    public void handleMessage(WebSocketSession session, WebSocketMessage<?> message) throws Exception {
        Map<String, String> map = objectMapper.readValue(message.getPayload().toString(), Map.class);
        System.out.println("handleMessage, message:{}"+ objectMapper.writeValueAsString(map));
    }

    @Override
    public void handleTransportError(WebSocketSession session, Throwable exception) throws Exception {
       System.out.println("error");

    }

    @Override
    public void afterConnectionClosed(WebSocketSession session, CloseStatus closeStatus) throws Exception {
        System.out.println("afterConnectionClosed, status:{}" + closeStatus);

    }

    @Override
    public boolean supportsPartialMessages() {
        System.out.println("supportsPartialMessages");
        return false;
    }
}